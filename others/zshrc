#!/bin/zsh

XDG_LOCAL_HOME="$HOME/.local"
XDG_CACHE_HOME="$HOME/.cache"
XDG_CONFIG_HOME="$HOME/.config"

# zsh history file
HISTFILE="$HOME/.zsh_history"
HISTSIZE=1000
SAVEHIST=1000

# Environment Variable
function Add_ENV() {
    for i (${(P)2}) {
        [[ ${(P)1} != *$i* ]] && export $1=${(P)1}:$i
    }
}

PATH_NEW=(
    "$XDG_LOCAL_HOME/bin"
    "$XDG_LOCAL_HOME/redis/bin"
    "$XDG_LOCAL_HOME/node/node_modules/.bin"
)
LIBRARY_PATH_NEW=(
    "$XDG_LOCAL_HOME/lib"
    "$XDG_LOCAL_HOME/hiredis/lib"
)
LD_LIBRARY_PATH_NEW=(
    "$LIBRARY_PATH_NEW"
)
CPLUS_INCLUDE_PATH_NEW=(
    "$XDG_LOCAL_HOME/include"
)
Add_ENV PATH               PATH_NEW
Add_ENV LIBRARY_PATH       LIBRARY_PATH_NEW
Add_ENV LD_LIBRARY_PATH    LD_LIBRARY_PATH_NEW
Add_ENV CPLUS_INCLUDE_PATH CPLUS_INCLUDE_PATH_NEW

unfunction Add_ENV
########################################################################################

# alias setting
typeset -A aliasKeyMap
aliasKeyMap=(
    ls      'ls --color'
    la      'ls -la --color'
    rr      'rm -r'

    # vim alias
    vst     'vim +StartupTime'
    vvi     'vim $XDG_CONFIG_HOME/nvim/init.lua'
    vrc     'vim $XDG_CONFIG_HOME/nvim/others/zshrc'
    src     'source $XDG_CONFIG_HOME/nvim/others/zshrc'

    # tmux alias
    tn      'tmux new -s'
    ta      'tmux attach -t'
    trnames 'tmux rename-session'
    trnamew 'tmux rename-window'

    # tar alias
    tgz     'tar -zcvf'
    tugz    'tar -zxvf -C'
    tbz2    'tar -cjf'
    tubz2   'tar -xjf -C'

    gr      'go run'

    gitus   'git status'
    gitash  'git stash'

    syyu    'sudo pacman -Syyu'
    qdtq    'sudo pacman -Rn $(sudo pacman -Qdtq)'
)
for k v (${(kv)aliasKeyMap}) {
    alias $k=$v
}
########################################################################################

# bindkey
typeset -A bindKeyMap
bindKeyMap=(
    "\e[1~"   beginning-of-line       # <home>
    "^[[H"    beginning-of-line       # <home>

    "\e[4~"   end-of-line             # <end>
    "^[[F"    end-of-line             # <end>

    "\e[3~"   delete-char             # <delete>
    "^[[j~"   delete-char             # <delete>

    # https://blog.csdn.net/z1w10281a/article/details/121488309
    "\eh"    backward-char            # <left>
    "\ej"    down-line-or-history     # <down>
    "\ek"    up-line-or-history       # <up>
    "\el"    forward-char             # <right>
)
for k v (${(kv)bindKeyMap}) {
    bindkey $k $v
}
########################################################################################

setopt no_nomatch
setopt rmstarsilent

# ignore <tab> completion case
zstyle ':completion:*' matcher-list 'm:{[:lower:][:upper:]}={[:upper:][:lower:]}' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*'
########################################################################################

# zinit
typeset -A ZINIT
ZINIT=(
    HOME_DIR        "$XDG_CONFIG_HOME/zinit"
    ZCOMPDUMP_PATH  "$XDG_CONFIG_HOME/zinit/.zcompdump"
)

if [[ ! -d ${ZINIT[HOME_DIR]} ]]; then
    git clone git@github.com:zdharma-continuum/zinit.git ${ZINIT[HOME_DIR]}
fi

source ${ZINIT[HOME_DIR]}/zinit.zsh
zinit ice depth "1" && zinit light romkatv/powerlevel10k
zinit light zsh-users/zsh-completions
zinit light zsh-users/zsh-autosuggestions
zinit light zsh-users/zsh-syntax-highlighting
zpcompinit

# p10k
[[ -f ~/.p10k.zsh ]] && source ~/.p10k.zsh

# fzf
if [[ ! -d "$XDG_CONFIG_HOME/fzf" ]]; then
    git clone --depth 1 git@github.com:junegunn/fzf.git $XDG_CONFIG_HOME/fzf
    sed -i 's/url=/url=https:\/\/ghproxy.com\//g' $XDG_CONFIG_HOME/fzf/install
    $XDG_CONFIG_HOME/fzf/install
fi

[[ -f ~/.fzf.zsh ]] && source ~/.fzf.zsh
export FZF_COMPLETION_TRIGGER='\'
export FZF_DEFAULT_OPTS="--bind 'alt-j:down,alt-k:up,tab:accept'"

# zoxide
which "zoxide" > /dev/null 2>&1

[[ $? != 0 ]] && curl -sS https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | bash
eval "$(zoxide init zsh)"
########################################################################################
